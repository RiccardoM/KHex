apply plugin: 'maven'
apply plugin: 'maven-publish'

apply from: project.rootProject.file('gradle/pom.gradle')

task emptyJar(type: Jar) {
}

task stubJavadoc(type: Jar) {
    classifier 'javadoc'
}

task stubDokka(type: Jar) {
    classifier 'kdoc'
}

def selectArtifactId(project, type, defaultName) {
    def name = project.name
    switch (type) {
        case 'metadata':
            return "$name"
            break
        default:
            return defaultName
            break
    }
}

def isAvailableForPublication(publication) {
    def name = publication.name
    return name in ['metadata']
}

tasks.withType(AbstractPublishToMaven).all {
    onlyIf { isAvailableForPublication(publication) }
}

publishing {
    publications.all {
        pom.withXml(configureMavenCentralMetadata)

        def type = it.name
        def id = selectArtifactId(project, type, it.artifactId)
        it.artifactId = id

        if (id.endsWith('native')) {
            it.artifact stubJavadoc
            it.artifact stubDokka
            it.artifact emptyJar
        }
    }
    kotlin.targets.all { target ->
        def publication = publishing.publications.findByName(target.name)

        if (publication != null) {
            if (target.platformType.name == 'jvm') {
                publication.artifact javadocJar
                publication.artifact dokkaJar
            } else {
                publication.artifact stubJavadoc
                publication.artifact stubDokka
            }

            if (target.platformType.name != 'native') {
                publication.moduleDescriptorGenerator = null
            } else {
                publication.artifact emptyJar
            }
        }
    }
}

publish.dependsOn publishToMavenLocal
